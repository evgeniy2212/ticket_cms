version: '3.2'

networks:
  dev-network:
    driver: bridge
  database-network:
    external: true
  traefik:
    external: true

volumes:
  app-volume:

services:

  queue:
    image: @repo@
    user: '${USER_ID:-1000}:${GROUP_ID:-1000}'
    restart: on-failure
    volumes:
      #- './conf/php-fpm.conf:/usr/local/etc/php-fpm.conf'
      - '/etc/passwd:/etc/passwd:ro'
      - '/etc/group:/etc/group:ro'
      - './storage:/app/storage'
    env_file:
      - .env
    command: 'php /app/artisan queue:work'
    depends_on:
      - redis
      
    networks:
      - dev-network
      - database-network

  cron:
    image: @repo@
    user: '${USER_ID:-1000}:${GROUP_ID:-1000}'
    restart: on-failure
    volumes:
      #- './conf/php-fpm.conf:/usr/local/etc/php-fpm.conf'
      - '/etc/passwd:/etc/passwd:ro'
      - '/etc/group:/etc/group:ro'
      - './storage:/app/storage'
    env_file:
      - .env
    command: /usr/local/bin/supercronic /usr/cron/cron.conf
    depends_on:
      - redis
      
    networks:
      - dev-network
      - database-network

  php:
    image: @repo@
    user: '${USER_ID:-1000}:${GROUP_ID:-1000}'
    restart: on-failure
    volumes:
      #- './conf/php-fpm.conf:/usr/local/etc/php-fpm.conf'
      - '/etc/passwd:/etc/passwd:ro'
      - '/etc/group:/etc/group:ro'
      - './storage:/app/storage'
      - app-volume:/app/public
    env_file:
      - .env
    command: php-fpm --nodaemonize -d "opcache.enable=1" -d "display_startup_errors=On" -d "display_errors=On" -d "error_reporting=E_ALL" -R
    depends_on:
      - redis
      
    networks:
      - dev-network
      - database-network

  redis:
    image: 'redis:alpine'
    restart: on-failure
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 15s
      timeout: 3s
      retries: 5
    networks:
      - dev-network

  web:
    image: 'artjoker/7.4:nginx'
    restart: on-failure
    volumes:
      - ./storage:/app/web/uploads
      - app-volume:/app/public:rw
    depends_on:
      - php
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.port=80"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.headers.SSLProxyHeaders=X-Forwarded-Proto:https"
      - "traefik.frontend.headers.SSLProxyHeaders=HTTPS:on"
      - "traefik.enable=true"
      - "traefik.weight=5"
      - "traefik.frontend.priority=5"
      - "traefik.frontend.rule=Host:example.com"
      - "traefik.frontend.redirect.permanent=true"
      - "traefik.frontend.redirect.regex=^http?://example.com/(.*)"
      - "traefik.frontend.redirect.replacement=https://example.com/$${1}"
    networks:
      - dev-network
      - traefik


